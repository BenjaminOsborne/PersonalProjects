@page "/"
@rendermode InteractiveServer

<PageTitle>Account Processor</PageTitle>

<MudStack Row=true>
    <MudText Color=Color.Primary><strong>Last Action Result: </strong></MudText>
    <MudText Color=@(Model.LastActionResult?.IsSuccess == true ? Color.Success : Color.Error)>
        @(Model.LastActionResult?.IsSuccess == true ? "Success!" : Model.LastActionResult?.Error)
    </MudText>
</MudStack>

<MudDivider Class="ma-1" DividerType="DividerType.FullWidth" />

<MudStack>
    <MudPaper Class="border-solid border-1 mud-border-primary pa-4">
        <MudGrid Class="align-center">
            <MudItem xs="2">
                <MudText><strong>[1] Create Transactions File</strong></MudText>
            </MudItem>
            <MudItem>
                <AccountConverter OnAccountFileConverted=@OnAccountFileConverted />
            </MudItem>
        </MudGrid>
    </MudPaper>

    @if (!IsModelLocationKnown())
    {
        <MudPaper Class="border-solid border-2 mud-border-primary pa-4">
            <MudGrid Class="align-center">
                <MudItem xs="2">
                    <MudText><strong>[2] Missing Model File</strong></MudText>
                </MudItem>
                <MudItem>
                    <MudText><i>Please configure where to load the model file (see ModelPersistence.cs)... </i></MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
    }
    else
    {
        @* Load & Categorise transaction files *@

        <MudPaper Class="border-solid border-2 mud-border-primary pa-4">
            <MudGrid Class="align-center">
                <MudItem xs="2">
                    <MudText><strong>[2] Categorise</strong></MudText>
                </MudItem>
                <MudItem>
                    <MudContainer>
                        @* ".extract.xlsx" filter works as Co-op/Santander files written as ".extract.xlsx" *@
                        <MudFileUpload T="IBrowserFile"
                                       FilesChanged=@LoadTransactionsAndCategorise
                                       Accept=@FileConstants.ExtractedTransactionsFileExtension
                                       MaximumFileCount="1">
                            <ActivatorContent>
                                <MudButton Variant="Variant.Filled"
                                           Color=Color.Primary
                                           StartIcon=@Icons.Material.Filled.FileOpen
                                           Size=@Size.Medium>
                                </MudButton>
                            </ActivatorContent>
                        </MudFileUpload>
                        <i>Loads an xlsx with Date, Description & Amount columns and runs categorisation. </i>
                    </MudContainer>
                </MudItem>
            </MudGrid>
        </MudPaper>

        @if (TransactionsAreFullyLoaded()) //Only display export button if transactions have been loaded
        {
            @* Export categorised *@

            <MudPaper Class="border-solid border-2 mud-border-primary pa-4">
                <MudGrid Class="align-center">
                    <MudItem xs="2">
                        <MudText><strong>[3] Export Categorised</strong></MudText>
                    </MudItem>
                    <MudItem>
                        <MudContainer>
                            <MudButton StartIcon=@Icons.Material.Filled.Download
                                       OnClick=@(() => ExportCategorisedTransactions())
                                       Color=Color.Primary>
                                Export
                            </MudButton>
                            <MudFlexBreak />
                            <i>Finally, exports the categorised transactions by category, for storage in LifeOrganisation file.</i>
                        </MudContainer>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        }
    }
</MudStack>

@if (TransactionsAreFullyLoaded())
{
    <hr />

    <MudStack Row=true Class="align-end">
        <MudPaper Elevation="0" Class="mb-3 d-flex justify-start flex-shrink-1">
            <MudDatePicker @bind-Date=@YearMonthBind FixDay=1 DateFormat="MMM yyyy" />
        </MudPaper>
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Size="Size.Medium" OnClick="() => Model.SkipMonth(-1)" />
        <MudIconButton Icon="@Icons.Material.Filled.ArrowForward" Size="Size.Medium" OnClick="() => Model.SkipMonth(+1)" />
        <MudIconButton Icon="@Icons.Material.Filled.Refresh" Size="Size.Medium" OnClick="() => Model.RefreshTransactions()" />
    </MudStack>

    <p />

    <label>
        <strong>Transactions Period:</strong> @Model.EarliestTransaction?.ToString("dd MMM") to @Model.LatestTransaction?.ToString("dd MMM")
    </label>

    <hr />

    @* Add new section *@
    <MudExpansionPanels>
        <MudExpansionPanel>
            <TitleContent>
                <MudText Typo=Typo.body1>Add new Section...</MudText>
            </TitleContent>
            <ChildContent>
                <MudStack Row=true Class="align-center">
                    <MudPaper Elevation="0" Class="mb-3 d-flex justify-start flex-shrink-1">
                        <MudSelect T=string
                                   @bind-Value=@Model.NewSectionCategory
                                   Placeholder="Choose category"
                                   Variant=Variant.Outlined
                                   Margin=Margin.Normal
                                   Dense=true
                                   Typo=Typo.body2
                                   Clearable=true
                                   Validation=@((string? s) => s == null ? "Select category" : null)>
                            @foreach (var cat in Model.Categories!.Value)
                            {
                                <MudSelectItem Value=@cat.Name/>
                            }
                        </MudSelect>
                    </MudPaper>
                    <MudPaper Width="300px" MaxWidth="300px">
                        <MudTextField T=string
                                      @bind-Value=@Model.NewSectionName
                                      Label="New Category Name"
                                      Validation=@((string? n) => n == null ? "Enter name" : null)
                                      Typo=Typo.subtitle1/>
                    </MudPaper>
                    <MudCheckBox @bind-Value=@Model.NewSectionIsMonthSpecific>Is Month Specific</MudCheckBox>
                    <MudTooltip Text="Create">
                        <MudIconButton Icon="@Icons.Material.Filled.Add" Size="Size.Large" OnClick="() => Model.CreateNewSection()"/>
                    </MudTooltip>
                </MudStack>
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>

    @* UnMatched Rows *@
    @if (Model.UnMatchedModel != null)
    {
        <hr />
        <UnMatchedRowsTable @ref="UnMatchedRowsTable" Model=@Model.UnMatchedModel AddNewMatchForRow=@AddNewMatchForRow />
    }

    @* Matched Rows *@
    @if (Model.MatchedModel != null)
    {
        <hr />
        <MatchedRowsTable @ref="MatchedRowsTable" Model=@Model.MatchedModel ClearMatch=@ClearMatch />
    }
}